PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE branch(
branchID INTEGER PRIMARY KEY not null,
brName varchar(255) not null,
address varchar(255) not null
);
CREATE TABLE Employee(
empID INTEGER PRIMARY KEY AUTOINCREMENT,
empName VARCHAR(255) NOT NULL,
Position VARCHAR(255) NOT NULL,
Salary REAL NOT NULL,
branchID INT NOT NULL,
CONSTRAINT ck_employee UNIQUE (empName),
CONSTRAINT fk_branch FOREIGN KEY (branchID) REFERENCES branch (branchID)
);
CREATE TABLE Devices(
devID INTEGER PRIMARY KEY AUTOINCREMENT,
devName VARCHAR(255) NOT NULL,
Type VARCHAR(255) NOT NULL,
Status VARCHAR(255) NOT NULL,
empID INT NOT NULL,
cusID INT NOT NULL,
CONSTRAINT fk_employee FOREIGN KEY (empID) REFERENCES Employee (empID),
CONSTRAINT fk_customer FOREIGN KEY (cusID) REFERENCES Customer (cusID)
);
CREATE TABLE Books(
bookID INTEGER PRIMARY KEY AUTOINCREMENT,
Title VARCHAR(255) NOT NULL,
Author VARCHAR(255) NOT NULL,
Publisher VARCHAR(255) NOT NULL,
Genre VARCHAR(255) NOT NULL,
bkStatus VARCHAR(255) NOT NULL,
ISBN VARCHAR(255) NOT NULL,
empID INT NOT NULL,
cusID INT NOT NULL,
CONSTRAINT ck_books UNIQUE (ISBN),
CONSTRAINT fk_employee FOREIGN KEY (empID) REFERENCES Employee (empID),
CONSTRAINT fk_customer FOREIGN KEY (cusID) REFERENCES Customer (cusID)
);
CREATE TABLE Customer(
cusID INTEGER PRIMARY KEY AUTOINCREMENT,
cusName VARCHAR(255) NOT NULL,
cusAddress VARCHAR(255) NOT NULL,
RegistrationDate VARCHAR(255) NOT NULL,
branchID INT NOT NULL,
CONSTRAINT ck_customer UNIQUE (cusName),
CONSTRAINT fk_branch FOREIGN KEY (branchID) REFERENCES branch (branchID)
);
CREATE TABLE EmployeeRegistersCustomer(
empID INT NOT NULL,
cusID INT NOT NULL,
CONSTRAINT fk_employee FOREIGN KEY (empID) REFERENCES Employee (empID),
CONSTRAINT fk_customer FOREIGN KEY (cusID) REFERENCES Customer (cusID)
);
CREATE TABLE IssueStatus(
issueID INTEGER PRIMARY KEY AUTOINCREMENT,
bookISBN VARCHAR(255) NOT NULL,
bookTitle VARCHAR(255) NOT NULL,
customerID INT NOT NULL,
issueDate VARCHAR(255) NOT NULL,
deviceName VARCHAR(255) NOT NULL,
deviceType VARCHAR(255) NOT NULL,
CONSTRAINT ck_issueStatus UNIQUE (bookISBN)
);
CREATE TABLE EmployeeUpdatesIssueStatus(
empID INT NOT NULL,
issueID INT NOT NULL,
CONSTRAINT fk_employee FOREIGN KEY (empID) REFERENCES Employee (empID),
CONSTRAINT fk_issueStatus FOREIGN KEY (issueID) REFERENCES IssueStatus (issueID)
);
CREATE TABLE ReturnStatus(
returnID INTEGER PRIMARY KEY AUTOINCREMENT,
bkISBN VARCHAR(255) NOT NULL,
bkTitle VARCHAR(255) NOT NULL,
custID INT NOT NULL,
returnDate VARCHAR(255) NOT NULL,
devicName VARCHAR(255) NOT NULL,
devicType VARCHAR(255) NOT NULL,
CONSTRAINT ck_returnStatus UNIQUE (bkISBN)
);
CREATE TABLE EmployeeUpdatesReturnStatus(
empID INT NOT NULL,
returnID INT NOT NULL,
CONSTRAINT fk_employee FOREIGN KEY (empID) REFERENCES Employee (empID),
CONSTRAINT fk_returnStatus FOREIGN KEY (returnID) REFERENCES ReturnStatus (returnID)
);
DELETE FROM sqlite_sequence;
COMMIT;
sqlite>